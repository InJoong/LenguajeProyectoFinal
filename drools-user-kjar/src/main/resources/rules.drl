package org.drools.workshop;
import org.drools.workshop.model.*;
import java.util.ArrayList;

/*
    Rango de dificultad:
    -5 (< -81): Extremadamente facil
    -4 (-80 - -61)
    -3 (-60 - -41)
    -2 (-40 - -21)
    -1 (-20 - -1)
    0 (0 - 10) - Normal
    1 (11 - 25)
    2 (26 - 50)
    3 (51 - 75)
    4 (76 - 90)
    5 (> 90) - Extremadamente dificil
*/
//Cargar preguntas
rule "Cargar hechos"
    when
    then

        //Categoria

        //Mate
        insert(new Categoria("Matematica Basica", "Algebra", null));
        insert(new Categoria("Algebra", "Calculo", "Matematica Basica"));
        insert(new Categoria("Calculo", null, "Algebra"));

        //Matematica Basica
        //Algebra
        //Calculo
        insert(new Pregunta("Matematicas", "Matematica Basica: \nResuelve: \n 1 + 1", "2", "La respuesta es 2.", "Matematica Basica", 1, 1));
        insert(new Pregunta("Matematicas", "Matematica Basica: \nResuelve: \n 2 - 5", "-3", "La respuesta es -3.", "Matematica Basica", 1, 1));
        insert(new Pregunta("Matematicas", "Matematica Basica: \nResuelve: \n 3 * 6", "18", "La respuesta es 18.", "Matematica Basica", 2, 1));
        insert(new Pregunta("Matematicas", "Matematica Basica: \nResuelve: \n 50 / 5", "10", "La respuesta es 10.", "Matematica Basica", 2, 1));
        insert(new Pregunta("Matematicas", "Matematica Basica: \nResuelve: \n 1 + 4 * 7", "29", "La respuesta es 29.", "Matematica Basica", 3, 1));
        insert(new Pregunta("Matematicas", "Matematica Basica: \nResuelve: \n 1 + 4 * 8", "33", "La respuesta es 33", "Matematica Basica", 3, 1));
        insert(new Pregunta("Matematicas", "Algebra: \nEncuentra X: \n 6 = x - 3", "9", "Se resulve primero la multiplicacion por la herarquia y despues la suma \n La respuesta es 9.", "Algebra", 1, 1));
        insert(new Pregunta("Matematicas", "Algebra: \nEvalua la siguente funcion y escribe el valor de y: \n x = 4 \n y = 5x - 4", "16", "Al evaluar la x en la  funcion, queda: y = 5 * 4 - 4 \n La respuesta es 16.", "Algebra", 2, 1));
        insert(new Pregunta("Matematicas", "Algebra: \nEncuentra el punto origen de esta funcion: \n y = 4x + 4 \n A- y=4 x=-1 \n B- y=4 x=1 \n C- y=-4 x=1 \n D- y=-4 x=-1", "A", "Para sacar la y igualando la x a 0 y sacar la x igualando la y en 0 \n La respuesta es A.", "Algebra", 3, 1));
        insert(new Pregunta("Matematicas", "Calculo: \nDeriva y evalua la funcion: \n x = 5 \n y = (x^2) + 4x -123878", "14", "Al derivar: y' = 2x + 4 y al evaluar la x: y'= 2 * 5 + 4 \n La respuesta es 14.", "Calculo", 1, 1));
        insert(new Pregunta("Matematicas", "Calculo: \nIntegra y evalua la funcion: \n x = 5 \n y' = 2x + 4 \n A- y = 18 + c \n B- y = 45 + c \n C- y = 14 \n D- y = 14 + c", "B", "Al integrar: y = (x^2) + 4x + c y al evaluar la x: y = (5^2) + 4 * 5 + c \n La respuesta es B.", "Calculo", 2, 1));
        insert(new Pregunta("Matematicas", "Calculo: \nEncuentra x, y y z tal que: \n (x^3)+(y^3)+(z^3)=z \n Por cada k que va de 1 a 100 \n A- x=-1 y=-1 z=2 \n B- x=42 y=-1 z=80 \n C- x=-80538738812075974 y=80435758145817515 z=12602123297335631 \n D- x=-1 y=-1 z=-2", "C", "La respuesta es C.", "Calculo", 3, 1));

        insert(new Pregunta("Matematicas", "Algebra: \nEvalua la siguente funcion y escribe el valor de y: \n x = 2 \n y = 10x - 1", "19", "Al evaluar la x en la  funcion, queda: y = 10 * 2 - 1 \n La respuesta es 19.", "Algebra", 1, 1));
        insert(new Pregunta("Matematicas", "Algebra: \nEvalua la siguente funcion y escribe el valor de y: \n x = 7 \n y = 6x - 6", "19", "Al evaluar la x en la  funcion, queda: y = 6 * 7 - 6 \n La respuesta es 36.", "Algebra", 1, 1));
        insert(new Pregunta("Matematicas", "Algebra: \nEvalua la siguente funcion y escribe el valor de y: \n x = 99 \n y = x - 3", "19", "Al evaluar la x en la  funcion, queda: y = 99 - 3 \n La respuesta es 96.", "Algebra", 1, 1));
        insert(new Pregunta("Matematicas", "Calculo: \nEncuentra el punto origen de esta funcion: \n y = 3x - 6 \n A-  y=6 x=2 \n B- y=-6 x=-2 \n C-  y=6 x=-2 \n D- y=-6 x=2", "D", "Para sacar la y igualando la x a 0 y sacar la x igualando la y en 0 \n La respuesta es D.", "Calculo", 1, 1));
        
        //Historia
        insert(new Categoria("Historia Clasica", "Historia Mundial", null));
        insert(new Categoria("Historia Mundial", "Historia de Mexico", "Historia Clasica"));
        insert(new Categoria("Historia de Mexico", null, "Historia Mundial"));

        //Historia Clasica
        //Historia Mundial
        //Historia de Mexico        
        insert(new Pregunta("Historia", "Historia Clasica: \nPartido Politico que buscaba establecer en Meexico una Republica Federal:", "Federalistas", "La respuesta es el partido Federalista.", "Historia Clasica", 1, 1));
        insert(new Pregunta("Historia", "Historia Clasica: \nEn el desarrollo de la Guerra de Reforma pelearon: \n A) Liberales contra Conservadores \n B) Liberales contra norteamericanos \n C)Liberales y Franceses", "A", "La respuesta es A.", "Historia Clasica", 2, 1));
        insert(new Pregunta("Historia", "Historia Clasica: \nEn la Batalla del 5 de Mayo en Puebla triunfo el ejercito mexicano bajo las ordenes de: \n A) Juarez \n B) Santa Anna \n C) Zaragoza", "C", "La respuesta es C.", "Historia Clasica", 2, 1));
        insert(new Pregunta("Historia", "Historia Clasica: \nGuerra que sostuvo Mexico contra Francia durante el periodo de Anastasio Bustamante. \n A) Guerra de los pasteles \n B) Guerra Cristera \n C) Ambas", "A", "La respuesta es B.", "Historia Clasica", 3, 1));
        insert(new Pregunta("Historia", "Historia Mundial: \nOrganizaron la convencion de Londres para invadir a Mexico. \n A) Francia, Prusia y Austria \n B) Francia, Inglaterray Espania \n C) Francia, Inglaterra y E.U.A", "B", "La respuesta es B", "Historia Mundial", 1, 1));
        insert(new Pregunta("Historia", "Historia Mundial: \nLa cultura mas antigua que se desarrollo en Mesoamerica y a la que se conoce con el nombre de Cultura Madre fue:", "Olmeca", "La respuesta es la cultura olmeca", "Historia Mundial", 2, 1));
        insert(new Pregunta("Historia", "Historia Mundial: \nLideres de la Independencia que lograron la Consumacion de nuestra Independencia. \n A) Benito Juarez y Hemenegildo Galeana \n B) Agustin de Iturbide y Vicente Guerrero \n C) Miguel Hidalgo y Morelos", "B", "La respuesta es B, las otras opciones contienen a lideres que no lograron sobrevivir al termino de la guerra", "Historia Mundial", 3, 1));
        insert(new Pregunta("Historia", "Historia de Mexico: \nForma de gobierno que permanecio desde 1535 hasta 1821. \n A)Real Audiencia \n B) Virreinato \n C) Real Consejo de Indias", "B", "Mexico fue gobernado bajo el sistema de Virreinato de 1535 hasta 1821.", "Historia de Mexico", 1, 1));
        insert(new Pregunta("Historia", "Historia de Mexico: \nObjetivos de las ideas politicas de los hermanos Flores Magon y de otros integrantes de los clubes liberales.\n A) Apoyar la reelecion de Diaz \n B) Defender las libertades individuales, la justicia social y la no-reelecion \n C) Cambiar al sistema de gobierno democratico por una dictadura", "B", "La respuesta es la B", "Historia de Mexico", 2, 1));
        insert(new Pregunta("Historia", "Historia de Mexico: \nCausa por la que dejo de funcionar con exito la politica de desarrollo estabilizador en la decada de 1970. \n A)Venta excesiva de materias primas \n B)Exagerado incremento de la poblacion del pais \n C)Moratoria al pago de la deuda externa", "B", "La respuesta es B.", "Historia de Mexico", 2, 1));
        insert(new Pregunta("Historia", "Historia de Mexico: \nFecha en la que se funso el IMSS(DD/MM/AAAA)", "19/01/1943", "El IMSS fue fundado el 19 de enero de 1943", "Historia de Mexico", 3, 1));

        insert(new Respuesta());
end

rule "Asignar Categoria Mates"
    when
        $a : Alumno(course == "Matematicas" && category == null)
        $c : Categoria(name == "Matematica Basica")
    then
        $a.setCategory($c);
        update($a);
end

rule "Asignar Categoria Historia"
    when
        $a : Alumno(course == "Historia" && category == null)
        $c : Categoria(name == "Historia Clasica")
    then
        $a.setCategory($c);
        update($a);
end


rule "Subir Categoria"
    when
        $a : Alumno(point >= 100)
        $c : Categoria(this.name == $a.category.name && nextCat != null)
        $cs : Categoria(this.name == $c.nextCat)
    then
        $a.setCategory($cs);
        $a.setPoint(50);
        update($a);
end

rule "Bajar Categoria"
    when
        $a : Alumno(point <= 0)
        $c : Categoria(this.name == $a.category.name && lastCat != null)
        $ca : Categoria(this.name == $c.lastCat)
    then
        $a.setCategory($ca);
        $a.setPoint(50);
        update($a);
end

//Determinar los puntos de acuerdo a las respuestas
rule "Determinar puntos positivos"
    when
        $r : Respuesta(answer == true)
        $a : Alumno(name == $r.name && semester == $r.semester && course == $r.course)
    then
        $a.setPoint($a.getPoint() + 34);
        retract($r);
        update($a);
end

rule "Determinar puntos negativos"
    when
        $r : Respuesta(answer == false)
        $a : Alumno(name == $r.name && semester == $r.semester && course == $r.course)
    then
        retract($r);
        $a.setPoint($a.getPoint() - 34);
        update($a);
end
/*
    Rango de dificultad:
    -5 (< -81): Extremadamente facil
    -4 (-80 - -61)
    -3 (-60 - -41)
    -2 (-40 - -21)
    -1 (-20 - -1)
    0 (0 - 10) - Normal
    1 (11 - 25)
    2 (26 - 50)
    3 (51 - 75)
    4 (76 - 90)
    5 (> 90) - Extremadamente dificil
*/
//Determinar que pregunta dar de acuerdo a puntos, semestre y curso


rule "Determinar pregunta 1"
    when
        $a : Alumno(point > 0 && point <= 33)
        $p : ArrayList(size >= 1) from collect (Pregunta(semester == $a.semester && course == $a.course && difficulty == 1 && category == $a.category.name))
    then
        $a.setPregunta($p);
end

rule "Determinar pregunta 2"
    when
        $a : Alumno(point > 33 && point <= 66)
        $p : ArrayList(size >= 1) from collect (Pregunta(semester == $a.semester && course == $a.course && difficulty == 2 && category == $a.category.name))
    then
        $a.setPregunta($p);
end

rule "Determinar pregunta 3"
    when
        $a : Alumno(point > 66 && point <= 100)
        $p : ArrayList(size >= 1) from collect (Pregunta(semester == $a.semester && course == $a.course && difficulty == 3 && category == $a.category.name))
    then
        $a.setPregunta($p);
end


